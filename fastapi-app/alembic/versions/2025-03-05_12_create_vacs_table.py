"""create vacs table

Revision ID: f3d5aa0f877f
Revises: 2bc3cd49e79e
Create Date: 2025-03-05 12:38:37.100988

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "f3d5aa0f877f"
down_revision: Union[str, None] = "2bc3cd49e79e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "vacancy",
        sa.Column("title", sa.String(length=127), nullable=False),
        sa.Column(
            "grade",
            postgresql.ENUM(
                "JUNIOR",
                "MIDDLE",
                "SENIOR",
                "TEAM_LEAD",
                "INTERN",
                name="vac_grade",
            ),
            nullable=False,
        ),
        sa.Column(
            "lang",
            postgresql.ENUM(
                "C_SHARP",
                "JAVA",
                "FRONTEND",
                "PYTHON",
                "GO",
                "C_PLUS_PLUS",
                "IOS",
                name="language",
            ),
            nullable=False,
        ),
        sa.Column(
            "experience",
            sa.Integer(),
            nullable=False,
            comment="Мин количество лет опыта",
        ),
        sa.Column(
            "link", sa.String(length=2000), nullable=False, comment="Vac link"
        ),
        sa.Column("company_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["company.id"],
            name=op.f("vacancy_company_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("vacancy_pkey")),
        sa.UniqueConstraint("link", name=op.f("vacancy_link_key")),
    )
    op.alter_column(
        "company",
        "name",
        existing_type=postgresql.ENUM(
            "AVIASALES", "SELECTEL", "X5", name="company_name"
        ),
        comment="",
        existing_nullable=False,
    )
    op.alter_column(
        "company",
        "company_vacs_url",
        existing_type=sa.VARCHAR(length=2000),
        comment="",
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "company",
        "company_vacs_url",
        existing_type=sa.VARCHAR(length=2000),
        comment=None,
        existing_comment="",
        existing_nullable=False,
    )
    op.alter_column(
        "company",
        "name",
        existing_type=postgresql.ENUM(
            "AVIASALES", "SELECTEL", "X5", name="company_name"
        ),
        comment=None,
        existing_comment="",
        existing_nullable=False,
    )
    op.drop_table("vacancy")
    # ### end Alembic commands ###
